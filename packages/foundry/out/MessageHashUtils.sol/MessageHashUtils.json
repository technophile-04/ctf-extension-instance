{"abi":[],"bytecode":{"object":"0x60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212208b5b99ed2a0a4204ce2620a5e0a22332e55ebdb20c3f508e561b979f5b73f4c264736f6c634300081a0033","sourceMap":"521:3235:49:-:0;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x600080fdfea26469706673582212208b5b99ed2a0a4204ce2620a5e0a22332e55ebdb20c3f508e561b979f5b73f4c264736f6c634300081a0033","sourceMap":"521:3235:49:-:0;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol":"MessageHashUtils"},"evmVersion":"paris","libraries":{},"viaIR":true},"sources":{"lib/openzeppelin-contracts/contracts/utils/Strings.sol":{"keccak256":"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792","urls":["bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453","dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol":{"keccak256":"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435","urls":["bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c","dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"keccak256":"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d","urls":["bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875","dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol":{"keccak256":"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72","urls":["bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc","dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol","id":44087,"exportedSymbols":{"MessageHashUtils":[44086],"Strings":[43664]},"nodeType":"SourceUnit","src":"123:3634:49","nodes":[{"id":44014,"nodeType":"PragmaDirective","src":"123:24:49","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":44016,"nodeType":"ImportDirective","src":"149:39:49","nodes":[],"absolutePath":"lib/openzeppelin-contracts/contracts/utils/Strings.sol","file":"../Strings.sol","nameLocation":"-1:-1:-1","scope":44087,"sourceUnit":43665,"symbolAliases":[{"foreign":{"id":44015,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43664,"src":"157:7:49","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":44086,"nodeType":"ContractDefinition","src":"521:3235:49","nodes":[{"id":44027,"nodeType":"FunctionDefinition","src":"1222:460:49","nodes":[],"body":{"id":44026,"nodeType":"Block","src":"1314:368:49","nodes":[],"statements":[{"AST":{"nativeSrc":"1376:300:49","nodeType":"YulBlock","src":"1376:300:49","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1397:4:49","nodeType":"YulLiteral","src":"1397:4:49","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1403:34:49","nodeType":"YulLiteral","src":"1403:34:49","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1390:6:49","nodeType":"YulIdentifier","src":"1390:6:49"},"nativeSrc":"1390:48:49","nodeType":"YulFunctionCall","src":"1390:48:49"},"nativeSrc":"1390:48:49","nodeType":"YulExpressionStatement","src":"1390:48:49"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1499:4:49","nodeType":"YulLiteral","src":"1499:4:49","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1505:11:49","nodeType":"YulIdentifier","src":"1505:11:49"}],"functionName":{"name":"mstore","nativeSrc":"1492:6:49","nodeType":"YulIdentifier","src":"1492:6:49"},"nativeSrc":"1492:25:49","nodeType":"YulFunctionCall","src":"1492:25:49"},"nativeSrc":"1492:25:49","nodeType":"YulExpressionStatement","src":"1492:25:49"},{"nativeSrc":"1571:31:49","nodeType":"YulAssignment","src":"1571:31:49","value":{"arguments":[{"kind":"number","nativeSrc":"1591:4:49","nodeType":"YulLiteral","src":"1591:4:49","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1597:4:49","nodeType":"YulLiteral","src":"1597:4:49","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1581:9:49","nodeType":"YulIdentifier","src":"1581:9:49"},"nativeSrc":"1581:21:49","nodeType":"YulFunctionCall","src":"1581:21:49"},"variableNames":[{"name":"digest","nativeSrc":"1571:6:49","nodeType":"YulIdentifier","src":"1571:6:49"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":44023,"isOffset":false,"isSlot":false,"src":"1571:6:49","valueSize":1},{"declaration":44020,"isOffset":false,"isSlot":false,"src":"1505:11:49","valueSize":1}],"id":44025,"nodeType":"InlineAssembly","src":"1367:309:49"}]},"documentation":{"id":44018,"nodeType":"StructuredDocumentation","src":"552:665:49","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:49","parameters":{"id":44021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44020,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:49","nodeType":"VariableDeclaration","scope":44027,"src":"1254:19:49","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":44019,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:49","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:49"},"returnParameters":{"id":44024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44023,"mutability":"mutable","name":"digest","nameLocation":"1306:6:49","nodeType":"VariableDeclaration","scope":44027,"src":"1298:14:49","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":44022,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:49","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:49"},"scope":44086,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":44053,"nodeType":"FunctionDefinition","src":"2148:229:49","nodes":[],"body":{"id":44052,"nodeType":"Block","src":"2234:143:49","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":44039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2286:32:49","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":44044,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44030,"src":"2343:7:49","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":44045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2351:6:49","memberName":"length","nodeType":"MemberAccess","src":"2343:14:49","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":44042,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43664,"src":"2326:7:49","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$43664_$","typeString":"type(library Strings)"}},"id":44043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2334:8:49","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":43477,"src":"2326:16:49","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":44046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2326:32:49","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":44041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2320:5:49","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":44040,"name":"bytes","nodeType":"ElementaryTypeName","src":"2320:5:49","typeDescriptions":{}}},"id":44047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:39:49","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":44048,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44030,"src":"2361:7:49","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":44037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2273:5:49","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":44036,"name":"bytes","nodeType":"ElementaryTypeName","src":"2273:5:49","typeDescriptions":{}}},"id":44038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2279:6:49","memberName":"concat","nodeType":"MemberAccess","src":"2273:12:49","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":44049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:96:49","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":44035,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2263:9:49","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":44050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2263:107:49","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":44034,"id":44051,"nodeType":"Return","src":"2244:126:49"}]},"documentation":{"id":44028,"nodeType":"StructuredDocumentation","src":"1688:455:49","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2157:22:49","parameters":{"id":44031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44030,"mutability":"mutable","name":"message","nameLocation":"2193:7:49","nodeType":"VariableDeclaration","scope":44053,"src":"2180:20:49","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":44029,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:49","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2179:22:49"},"returnParameters":{"id":44034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44033,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":44053,"src":"2225:7:49","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":44032,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:49","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2224:9:49"},"scope":44086,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":44073,"nodeType":"FunctionDefinition","src":"2720:191:49","nodes":[],"body":{"id":44072,"nodeType":"Block","src":"2831:80:49","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":44066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2875:10:49","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":44067,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44056,"src":"2887:9:49","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":44068,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44058,"src":"2898:4:49","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":44064,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2858:3:49","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":44065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2862:12:49","memberName":"encodePacked","nodeType":"MemberAccess","src":"2858:16:49","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":44069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2858:45:49","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":44063,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2848:9:49","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":44070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2848:56:49","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":44062,"id":44071,"nodeType":"Return","src":"2841:63:49"}]},"documentation":{"id":44054,"nodeType":"StructuredDocumentation","src":"2383:332:49","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2729:31:49","parameters":{"id":44059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44056,"mutability":"mutable","name":"validator","nameLocation":"2769:9:49","nodeType":"VariableDeclaration","scope":44073,"src":"2761:17:49","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":44055,"name":"address","nodeType":"ElementaryTypeName","src":"2761:7:49","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":44058,"mutability":"mutable","name":"data","nameLocation":"2793:4:49","nodeType":"VariableDeclaration","scope":44073,"src":"2780:17:49","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":44057,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:49","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2760:38:49"},"returnParameters":{"id":44062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44061,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":44073,"src":"2822:7:49","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":44060,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2822:7:49","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2821:9:49"},"scope":44086,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":44085,"nodeType":"FunctionDefinition","src":"3353:401:49","nodes":[],"body":{"id":44084,"nodeType":"Block","src":"3462:292:49","nodes":[],"statements":[{"AST":{"nativeSrc":"3524:224:49","nodeType":"YulBlock","src":"3524:224:49","statements":[{"nativeSrc":"3538:22:49","nodeType":"YulVariableDeclaration","src":"3538:22:49","value":{"arguments":[{"kind":"number","nativeSrc":"3555:4:49","nodeType":"YulLiteral","src":"3555:4:49","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3549:5:49","nodeType":"YulIdentifier","src":"3549:5:49"},"nativeSrc":"3549:11:49","nodeType":"YulFunctionCall","src":"3549:11:49"},"variables":[{"name":"ptr","nativeSrc":"3542:3:49","nodeType":"YulTypedName","src":"3542:3:49","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"3580:3:49","nodeType":"YulIdentifier","src":"3580:3:49"},{"hexValue":"1901","kind":"string","nativeSrc":"3585:10:49","nodeType":"YulLiteral","src":"3585:10:49","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"3573:6:49","nodeType":"YulIdentifier","src":"3573:6:49"},"nativeSrc":"3573:23:49","nodeType":"YulFunctionCall","src":"3573:23:49"},"nativeSrc":"3573:23:49","nodeType":"YulExpressionStatement","src":"3573:23:49"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3620:3:49","nodeType":"YulIdentifier","src":"3620:3:49"},{"kind":"number","nativeSrc":"3625:4:49","nodeType":"YulLiteral","src":"3625:4:49","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"3616:3:49","nodeType":"YulIdentifier","src":"3616:3:49"},"nativeSrc":"3616:14:49","nodeType":"YulFunctionCall","src":"3616:14:49"},{"name":"domainSeparator","nativeSrc":"3632:15:49","nodeType":"YulIdentifier","src":"3632:15:49"}],"functionName":{"name":"mstore","nativeSrc":"3609:6:49","nodeType":"YulIdentifier","src":"3609:6:49"},"nativeSrc":"3609:39:49","nodeType":"YulFunctionCall","src":"3609:39:49"},"nativeSrc":"3609:39:49","nodeType":"YulExpressionStatement","src":"3609:39:49"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3672:3:49","nodeType":"YulIdentifier","src":"3672:3:49"},{"kind":"number","nativeSrc":"3677:4:49","nodeType":"YulLiteral","src":"3677:4:49","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3668:3:49","nodeType":"YulIdentifier","src":"3668:3:49"},"nativeSrc":"3668:14:49","nodeType":"YulFunctionCall","src":"3668:14:49"},{"name":"structHash","nativeSrc":"3684:10:49","nodeType":"YulIdentifier","src":"3684:10:49"}],"functionName":{"name":"mstore","nativeSrc":"3661:6:49","nodeType":"YulIdentifier","src":"3661:6:49"},"nativeSrc":"3661:34:49","nodeType":"YulFunctionCall","src":"3661:34:49"},"nativeSrc":"3661:34:49","nodeType":"YulExpressionStatement","src":"3661:34:49"},{"nativeSrc":"3708:30:49","nodeType":"YulAssignment","src":"3708:30:49","value":{"arguments":[{"name":"ptr","nativeSrc":"3728:3:49","nodeType":"YulIdentifier","src":"3728:3:49"},{"kind":"number","nativeSrc":"3733:4:49","nodeType":"YulLiteral","src":"3733:4:49","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"3718:9:49","nodeType":"YulIdentifier","src":"3718:9:49"},"nativeSrc":"3718:20:49","nodeType":"YulFunctionCall","src":"3718:20:49"},"variableNames":[{"name":"digest","nativeSrc":"3708:6:49","nodeType":"YulIdentifier","src":"3708:6:49"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":44081,"isOffset":false,"isSlot":false,"src":"3708:6:49","valueSize":1},{"declaration":44076,"isOffset":false,"isSlot":false,"src":"3632:15:49","valueSize":1},{"declaration":44078,"isOffset":false,"isSlot":false,"src":"3684:10:49","valueSize":1}],"id":44083,"nodeType":"InlineAssembly","src":"3515:233:49"}]},"documentation":{"id":44074,"nodeType":"StructuredDocumentation","src":"2917:431:49","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3362:15:49","parameters":{"id":44079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44076,"mutability":"mutable","name":"domainSeparator","nameLocation":"3386:15:49","nodeType":"VariableDeclaration","scope":44085,"src":"3378:23:49","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":44075,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3378:7:49","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":44078,"mutability":"mutable","name":"structHash","nameLocation":"3411:10:49","nodeType":"VariableDeclaration","scope":44085,"src":"3403:18:49","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":44077,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3403:7:49","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3377:45:49"},"returnParameters":{"id":44082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44081,"mutability":"mutable","name":"digest","nameLocation":"3454:6:49","nodeType":"VariableDeclaration","scope":44085,"src":"3446:14:49","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":44080,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3446:7:49","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3445:16:49"},"scope":44086,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":44017,"nodeType":"StructuredDocumentation","src":"190:330:49","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"linearizedBaseContracts":[44086],"name":"MessageHashUtils","nameLocation":"529:16:49","scope":44087,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":49}